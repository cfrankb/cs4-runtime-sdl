def get_pair(line):
    pair = []
    for e in line.split(' '):
        e = e.strip()
        if not e:
            continue
        if e[0] == '#':
            break
        pair.append(e)
    return pair

def main():
    defines = ['//////////////////////////////////////////////////',
               '// autogenerated',
               '',
               '#pragma once',
               ''
               ]
    types = set()
    lines = []
    with open ('tiles.ini') as sfile:
        lines = sfile.read().split('\n')

    section = None
    line_num = 0
    i = 0
    for line in lines:
        line_num += 1
        line = line.strip().replace('\t', ' ')
        if not line:
            continue
        if line[0] == '#':
            continue

        if line[0] == '[':
            if section:
                defines.append('')
            section = line[1:-1]
            defines.append(f'// {section}')
            i = 0
            continue

        if section:
            pair = get_pair(line)
            if not pair:
                continue
            def_name = pair[0].upper()
            if section == 'type':
                types.add(def_name)
            prefix = def_name[0:len(section)]
            if prefix.upper() != section.upper():
                def_name = f'{section.upper()}_{def_name}'
            if len(pair) > 1:
                i = int(pair[1], 16)
            val = int(pair[1],16) if len(pair) >1 else i
            c = line.split('#',1)
            name = c[1].strip() if len(c) > 1 else ''
            defines.append(f'#define {def_name:32} 0x{val:0>2x}' + (f' // {name}' if name else ''))
            i += 1
        else:
            print(f'value no in section on line {line_num}')

    with open('tiles.h', 'w') as tfile:
        tfile.write('\n'.join(defines))

main()
